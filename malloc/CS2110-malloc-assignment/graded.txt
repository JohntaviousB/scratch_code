SUB: (-12) check_malloc_1 - basic tests: the freelist is not what it should be, which will throw off everything else in your library;
SUB: (-5) check_malloc_1 - basic tests: the freelist is not what it should be after a couple of calls to malloc;
SUB: (-4) check_malloc_1 - basic tests: the freelist is not what it should be after a couple more calls to malloc;
SUB: (-4) check_malloc_2 - edge cases: Allocated max size + 1;
Function #1: check_malloc_2 SEGFAULTED/TIMED_OUT
Function #2: check_malloc_3 SEGFAULTED/TIMED_OUT
SUB: (-4) check_free_1 - basic: freelist is not correct after one free;
SUB: (-4) check_free_1 - basic: Did not combine two nodes into one;
SUB: (-4) check_free_1 - basic: the freelist is not correct after combining all to 2048;
SUB: (-4) check_free_2 - more combining: Did not combine two nodes into one;
SUB: (-4) check_free_3 - test freelist: freelist not correct if buddy is first in list;
SUB: (-4) check_free_4 - more recombination: freelist not correct if buddy is second in list;
SUB: (-4) check_free_5 - more recombination: freelist not correct if buddy is last in list;
SUB: (-3) check_EC_1 - test REQUEST_TOO_LARGE: Error code SINGLE_REQUEST_TOO_LARGE not used correctly.
SUB: (-3) check_EC_2 - test OUT_OF_MEMORY: Error code OUT_OF_MEMORY not used correctly.
SUB: (-4) check_EC_4_canary1 - test CANARY_CORRUPTED for beginning of buffer: Error code CANARY_CORRUPTED not used correctly for corruption before beginning of buffer.
SUB: (-4) check_EC_4_canary2 - test CANARY_CORRUPTED for end of buffer: Error code CANARY_CORRUPTED not used correctly for corruption at end of buffer.

Score: 15/100 points
Any difference between points lost and points gained is due to functions segfaulting/timeing out before points can be deducted,
in which case those points are still lost by not adding them.
~Nathan
